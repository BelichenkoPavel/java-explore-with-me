DROP TABLE IF EXISTS events cascade;
DROP TABLE IF EXISTS category cascade;
DROP TABLE IF EXISTS compilations cascade;
DROP TABLE IF EXISTS users cascade;
DROP TABLE IF EXISTS locations cascade;
DROP TABLE IF EXISTS requests cascade;
DROP TABLE IF EXISTS compilations_events cascade;

DROP TYPE IF EXISTS state;

CREATE TYPE state AS ENUM ('PENDING', 'PUBLISHED', 'CANCELED');

CREATE TABLE IF NOT EXISTS PUBLIC.category (
  id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR(50) NOT NULL,
  CONSTRAINT pk_—Åategory_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.compilations(
   id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
   pinned BOOLEAN,
   title VARCHAR(50) NOT NULL,
  CONSTRAINT pk_compilations_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.users (
  id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(254) NOT NULL,
  CONSTRAINT pk_users_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.locations (
  id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  lat float NOT NULL,
  lon float NOT NULL,
  CONSTRAINT pk_locations_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS PUBLIC.events (
  id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  title VARCHAR NOT NULL,
  views INTEGER,
  annotation TEXT NOT NULL,
  category_id INTEGER NOT NULL,
  confirmed_requests INTEGER,
  created_on TIMESTAMP,
  description TEXT,
  event_date TIMESTAMP NOT NULL,
  initiator INTEGER NOT NULL,
  location INTEGER NOT NULL,
  paid BOOLEAN NOT NULL,
  participant_limit INTEGER,
  published_on TIMESTAMP,
  request_moderation BOOLEAN,
  state VARCHAR(50),
  CONSTRAINT pk_event_id PRIMARY KEY (id),
  CONSTRAINT events_categoryid_fk FOREIGN KEY ("category_id") REFERENCES PUBLIC."category"(id),
  CONSTRAINT events_initiator_fk FOREIGN KEY (initiator) REFERENCES PUBLIC."users"(id),
  CONSTRAINT events_location_fk FOREIGN KEY (location) REFERENCES PUBLIC."locations"(id)
);

CREATE TABLE IF NOT EXISTS requests(
  id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
  event_id BIGINT NOT NULL references events(id),
  requester_id BIGINT NOT NULL references users(id),
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  status VARCHAR(50) NOT NULL,
  CONSTRAINT pk_requests_id PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS compilations_events(
  compilation_id integer NOT NULL,
  event_id integer NOT NULL,
  CONSTRAINT compilations_events_compilationId_fk FOREIGN KEY (compilation_id) REFERENCES PUBLIC."compilations"(id),
  CONSTRAINT compilations_events_eventId_fk FOREIGN KEY (event_id) REFERENCES PUBLIC."events"(id)
);
